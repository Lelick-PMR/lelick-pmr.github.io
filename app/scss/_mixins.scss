// Миксин подключения шрифтов
@mixin font($family, $file, $weight, $style){
  @font-face {
    font-family: $family;
    src:  local(''+$file+''),
          local($family),
          url('../fonts/'+$file+'.woff2') format('woff2'),
          url('../fonts/'+$file+'.woff') format('woff');
    font-weight: $weight;
    font-style:  $style;
    font-display: swap;
  }
}

// Ограничиваем текст (дефолт 3 строки...)
@mixin textlimit($line-clamp: 3){
  -webkit-line-clamp: $line-clamp; /* Число отображаемых строк */
  display: -webkit-box; /* Включаем флексбоксы */
  -webkit-box-orient: vertical; /* Вертикальная ориентация */
  overflow: hidden; /* Обрезаем всё за пределами блока */
}

// Адаптивные значения
// Адаптивный размер шрифта

  /* Максимальная ширина макета, ниже которой, будем адаптировать верстку */ 
$maket-w-max: 1200;
  /* Минимальная ширина макета, ниже которой, значения уже не будем менять */
$maket-w-min: 375;   
/*
        140px   - максимальный отступ
        50px    - минимальный отступ
        1200px  - максимальная ширина макета
        375px   - минимальная ширина макета
        100vw   - текущая ширина экрана
 
      'значение' = 140-((1200-375)-(100vw-375)*(140-50)/(1200-375))
*/
 
$maket-w-val: calc($maket-w-max - $maket-w-min);
$disp-w-val: calc(100vw - $maket-w-min * 1px);
$p1: calc($maket-w-val * 1px - $disp-w-val);

@mixin font-size($max-val: 60, $min-val: 20) {
  $value: calc($max-val * 1px - ($p1 * ($max-val - $min-val) / $maket-w-val)); 
  font-size: $max-val * 1px;
  @media (max-width: $maket-w-max * 1px) {
    font-size: $value;
  }
  @media (max-width: $maket-w-min * 1px) {
    font-size: $min-val * 1px;
  }  
}

@mixin flex-size($property: 'padding', $max-val: 60, $min-val: 20) {
  $value: calc($max-val * 1px - ($p1 * ($max-val - $min-val) / $maket-w-val)); 

  @if $property == padding {
    padding: $max-val * 1px;
    @media (max-width: $maket-w-max * 1px) {
      padding: $value;
    }
    @media (max-width: $maket-w-min * 1px) {
      padding: $min-val * 1px;
    }  
  }

  @if $property == margin {
    margin: $max-val * 1px;
    @media (max-width: $maket-w-max * 1px) {
      margin: $value;
    }
    @media (max-width: $maket-w-min * 1px) {
      margin: $min-val * 1px;
    }  
  }
  
  @if $property == width {
    width: $max-val * 1px;
    @media (max-width: $maket-w-max * 1px) {
      width: $value;
    }
    @media (max-width: $maket-w-min * 1px) {
      width: $min-val * 1px;
    }  
  }
    
  @if $property == height {
    height: $max-val * 1px;
    @media (max-width: $maket-w-max * 1px) {
      height: $value;
    }
    @media (max-width: $maket-w-min * 1px) {
      height: $min-val * 1px;
    }  
  }

  @if $property == max-width {
    max-width: $max-val * 1px;
    @media (max-width: $maket-w-max * 1px) {
      max-width: $value;
    }
    @media (max-width: $maket-w-min * 1px) {
      max-width: $min-val * 1px;
    }  
  }

  @if $property == max-height {
    max-height: $max-val * 1px;
    @media (max-width: $maket-w-max * 1px) {
      max-height: $value;
    }
    @media (max-width: $maket-w-min * 1px) {
      max-height: $min-val * 1px;
    }  
  }

  @if $property == min-width {
    min-width: $max-val * 1px;
    @media (max-width: $maket-w-max * 1px) {
      min-width: $value;
    }
    @media (max-width: $maket-w-min * 1px) {
      min-width: $min-val * 1px;
    }  
  }

  @if $property == min-height {
    min-height: $max-val * 1px;
    @media (max-width: $maket-w-max * 1px) {
      min-height: $value;
    }
    @media (max-width: $maket-w-min * 1px) {
      min-height: $min-val * 1px;
    }  
  }

}